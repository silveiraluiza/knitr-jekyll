setwd("C:/Users/Luiza/Documents/UFCG/20171/AD1/site")
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_serve()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(dplyr)
library(ggplot2)
ob <- dados %>% filter(series_name %in% c("Orphan Black"))
dados <- dados %>% filter(series_name %in% c("Once Upon a Time", "The 100", "Orphan Black", "Stranger Things"))
dados <- read.csv('series_from_imdb.csv')
unique(dados$series_name)
names(dados)
# selecionando as séries que serão utilizadas
dados <- dados %>% filter(series_name %in% c("Once Upon a Time", "The 100", "Orphan Black", "Stranger Things"))
ob <- dados %>% filter(series_name %in% c("Orphan Black"))
ouat <- dados %>% filter(series_name %in% c("Once Upon a Time"))
t100 <- dados %>% filter(series_name %in% c("The 100"))
st <- dados %>% filter(series_name %in% c("Stranger Things"))
medianas <- c(median(ouat$UserRating),median(t100$UserRating),median(ob$UserRating),median(st$UserRating))
serie <- c("Once Upon a Time", "The 100", "Orphan Black", "Stranger Things")
series.medianas %>% ggplot(aes(x= serie , y = medianas)) + geom_point(size = 3, color = 'red')
show(series.medianas)
series.medianas <- data.frame(serie,medianas)
series.medianas %>% ggplot(aes(x= serie , y = medianas)) + geom_point(size = 3, color = 'red')
dados %>%
ggplot(aes(x = series_name,y = UserRating)) + geom_boxplot(outlier.color = NA) + labs( x= "Série", y= "Nota") + geom_jitter(width = .1, size = 1, alpha = .5, color = "red")
variance <- c(var(ouat$UserRating),var(t100$UserRating),var(ob$UserRating),var(st$UserRating))
variancia <- data.frame(serie,variance)
variancia %>% ggplot(aes(x= serie , y = variance)) + geom_point(size = 3, color = 'red')
unlink('_source/2017-05-22-Problema 1 C1_cache', recursive = TRUE)
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_serve()
library(knitr)
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_gen()
brocks::blog_gen()
brocks::blog_gen()
brocks::blog_gen()
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_serve()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(dplyr)
library(ggplot2)
library(plotly)
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse, warn.conflicts = F)
library(dplyr)
library(ggplot2)
library(plotly)
# importando os dados
dados <- read.csv('series_from_imdb.csv')
dados$UserRating  <- dados$UserRating / 10
#séries
unique(dados$series_name)
# variáveis
names(dados)
# criando um data frame para as variancias
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
# Mostrando os dois extremos
serie <- c("The 100", "Narcos")
variancias <- c(max(variancia$SeriesVariance), min(variancia$SeriesVariance))
temporadas <- c(4, 2)
maxmin <- data.frame(serie, variancias, temporadas)
p1 <- ggplot(maxmin, aes(serie, variancias, fill = as.factor(temporadas))) + labs(x = "Nome da Série", y = "Variância", fill = "Número de Temporadas") +
geom_col()
ggplotly(p1)
show(maxmin)
t100 <- dados %>% filter(series_name %in% c("The r100"))
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color="red")) + geom_line() + geom_point()+ facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + guides(color=FALSE)
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color="red")) + geom_line() + geom_point()+ facet_grid(series_name$season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + guides(color=FALSE)
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color="red")) + geom_line() + geom_point()+ labs(x= "Temporada da Série", y= "Nota do Usuário") + guides(color=FALSE)
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color="red")) + geom_line() + geom_point()+ facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + guides(color=FALSE)
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color="red")) + geom_line() + geom_point()+ facet_grid(~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + guides(color=FALSE)
View(t100)
t100 <- dados %>% filter(series_name %in% c("The 100"))
t100 %>%
ggplot(aes(x = season_ep,y = UserRating, color="red")) + geom_line() + geom_point()+ facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + guides(color=FALSE)
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_serve()
brocks::blog_gen()
brocks::blog_serve()
library(dplyr)
library(plotly)
library(ggplot2)
dados <- read.csv('series_from_imdb.csv')
unique(dados$series_name)
names(dados)
# criando um data frame para as variancias
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
# Mostrando os dois extremos
serie <- c("The 100", "Narcos")
variancias <- c(max(variancia$SeriesVariance), min(variancia$SeriesVariance))
temporadas <- c(4, 2)
maxmin <- data.frame(serie, variancias, temporadas)
plot_ly(maxmin,
x = ~serie,
y = ~variancias,
text = ~paste('N temporadas: ', temporadas),
color = as.factor(temporadas),
type = 'bar') %>%
layout(
xaxis = list(title = "Série"),
yaxis = list(title = "Variância"))
t100 <- dados %>% filter(series_name %in% c("The 100"))
names(t100)[names(t100)=="UserRating"] <- "Nota"
names(t100)[names(t100)=="season_ep"] <- "Episodio"
names(t100)[names(t100)=="Episode"] <- "NomeEp"
## px <- t100 %>%
##  ggplot(aes(x =Episodio ,y = Nota)) + facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + geom_point(color="#f44256") + geom_line(color= "#f44256")
## ggplotly(px)
t101 <- t100 %>% filter(season == 1)
t102 <- t100 %>% filter(season == 2)
t103 <- t100 %>% filter(season == 3)
t104 <- t100 %>% filter(season == 4)
p1 <- plot_ly(t101, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 1",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota))  %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
p2 <- plot_ly(t102, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 2",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota)) %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
p3 <- plot_ly(t103, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 3",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota)) %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
p4 <- plot_ly(t104, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 4",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota)) %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
subplot(p1, p2, p3, p4)
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(plotly)
library(ggplot2)
# importando os dados
dados <- read.csv('series_from_imdb.csv')
dados$UserRating  <- dados$UserRating / 10
#séries
unique(dados$series_name)
# variáveis
names(dados)
# criando um data frame para as variancias
variancia <-group_by(dados, series_name) %>%
summarise(SeriesVariance=var(rep(UserRating)), N_temporadas=max(season))
# Mostrando os dois extremos
serie <- c("The 100", "Narcos")
variancias <- c(max(variancia$SeriesVariance), min(variancia$SeriesVariance))
temporadas <- c(4, 2)
maxmin <- data.frame(serie, variancias, temporadas)
plot_ly(maxmin,
x = ~serie,
y = ~variancias,
text = ~paste('N temporadas: ', temporadas),
color = as.factor(temporadas),
type = 'bar') %>%
layout(
xaxis = list(title = "Série"),
yaxis = list(title = "Variância"))
t100 <- dados %>% filter(series_name %in% c("The 100"))
names(t100)[names(t100)=="UserRating"] <- "Nota"
names(t100)[names(t100)=="season_ep"] <- "Episodio"
names(t100)[names(t100)=="Episode"] <- "NomeEp"
## px <- t100 %>%
##  ggplot(aes(x =Episodio ,y = Nota)) + facet_grid(series_name~season)+ labs(x= "Temporada da Série", y= "Nota do Usuário") + geom_point(color="#f44256") + geom_line(color= "#f44256")
## ggplotly(px)
t101 <- t100 %>% filter(season == 1)
t102 <- t100 %>% filter(season == 2)
t103 <- t100 %>% filter(season == 3)
t104 <- t100 %>% filter(season == 4)
p1 <- plot_ly(t101, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 1",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota))  %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
p2 <- plot_ly(t102, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 2",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota)) %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
p3 <- plot_ly(t103, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 3",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota)) %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
p4 <- plot_ly(t104, x = ~Episodio, y = ~Nota, type = "scatter" ,mode = 'lines+markers', name = "Temporada 4",hoverinfo = 'text',
text = ~paste('Episodio: ', NomeEp, '| N: ', Episodio, '| Nota: ', Nota)) %>%
layout( yaxis = list(range = c(5.5,10)), autosize = F, width = 1000, height = 500)
subplot(p1, p2, p3, p4)
# Mostrando os dois extremos
serie <- c("The Simpsons", "Narcos")
variancias <- c(0.5427355, min(variancia$SeriesVariance))
temporadas <- c(28, 2)
maxmin <- data.frame(serie, variancias, temporadas)
plot_ly(maxmin,
x = ~serie,
y = ~variancias,
text = ~paste('N temporadas: ', temporadas),
color = as.factor(temporadas),
type = 'bar') %>%
layout(
xaxis = list(title = "Série"),
yaxis = list(title = "Variância"))
mediana_variancia <- median(variancia$SeriesVariance)
var1 <- variancia %>% filter(SeriesVariance >= mediana_variancia)
var2 <- variancia %>% filter(SeriesVariance < mediana_variancia)
names(var1)[names(var1)=="SeriesVariance"] <- "Variancia"
names(var1)[names(var1)=="N_temporadas"] <- "Temporadas"
names(var1)[names(var1)=="series_name"] <- "Serie"
names(var2)[names(var2)=="SeriesVariance"] <- "Variancia"
names(var2)[names(var2)=="N_temporadas"] <- "Temporadas"
names(var2)[names(var2)=="series_name"] <- "Serie"
p2 <- ggplot(var2, aes(Variancia, Temporadas, fill = Serie)) + labs(y= "Número de Temporadas", x= "Variância", title = "Séries com Qualidade mais Regular", fill = "Nomes das séries") +
geom_col() + geom_point(color= 'gray')
ggplotly(p2, width = 1000, height = 483)
p3 <- ggplot(var1, aes(Variancia, Temporadas, fill = Serie)) + labs(y= "Número de Temporadas", x= "Variância", title = "Séries com Qualidade mais Irregular", fill = "Nomes das séries") +
geom_col() +geom_point(color= 'gray')
ggplotly(p3, width = 1000, height = 483)
var1 <- var1 %>% filter(Serie != "The 100")
p3 <- ggplot(var1, aes(Variancia, Temporadas, fill = Serie)) + labs(y= "Número de Temporadas", x= "Variância", title = "Séries com Qualidade mais Irregular", fill = "Nomes das séries") +
geom_col() + geom_point(color= 'gray')
ggplotly(p3, width = 1000, height = 483)
mediana_temporadas_regular <- median(var2$Temporadas)
mediana_temporadas_irregular <- median(var1$Temporadas)
#Qualidade mais regular
show(mediana_temporadas_regular)
#Qualidade menos regular
show(mediana_temporadas_irregular)
brocks::blog_gen()
brocks::blog_serve()
install.packages("webshot")
brocks::blog_gen()
brocks::blog_serve()
